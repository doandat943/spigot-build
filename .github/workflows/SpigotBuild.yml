name: Spigot Build

on:
  schedule:
    - cron: "0 0 */4 * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  get-versions:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.get-versions.outputs.versions }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch versions
        id: get-versions
        run: |
          versions=$(bash build.sh)
          echo "versions=${versions}" >> $GITHUB_ENV
          echo "::set-output name=versions::${versions}"

  build:
    runs-on: ubuntu-latest
    needs: get-versions
    strategy:
      matrix:
        version: ${{ fromJson(needs.get-versions.outputs.versions) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variable
        run: echo "date=$(date +%Y.%m.%d)" >> $GITHUB_ENV

      - name: Restore cache .m2 folder
        uses: actions/cache/restore@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-cache-maven-${{ env.date }}
          restore-keys: ${{ runner.os }}-cache-maven-

      - name: Restore cache Spigot repos
        uses: actions/cache/restore@v4
        with:
          path: |
            apache-maven-*
            Bukkit
            CraftBukkit
            Spigot
          key: ${{ runner.os }}-cache-spigot-${{ env.date }}
          restore-keys: ${{ runner.os }}-cache-spigot-

      - name: Restore cache build works
        uses: actions/cache/restore@v4
        with:
          path: work
          key: ${{ runner.os }}-cache-build-work-${{ env.date }}
          restore-keys: ${{ runner.os }}-cache-build-work-

      - name: Set up BuildTool
        run: |
          wget https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar -O BuildTools.jar
          mkdir -p output
          chmod +x ./build.sh

      - name: Set up JDK
        run: |
          classification=$(echo "${{ matrix.version }}" | awk -F: '{print $2}')
          if [[ "$classification" == "JAVA8" ]]; then
            echo "Using JDK 8"
            echo "JAVA_HOME=/path/to/jdk8" >> $GITHUB_ENV
          elif [[ "$classification" == "JAVA17" ]]; then
            echo "Using JDK 17"
            echo "JAVA_HOME=/path/to/jdk17" >> $GITHUB_ENV
          elif [[ "$classification" == "JAVA21" ]]; then
            echo "Using JDK 21"
            echo "JAVA_HOME=/path/to/jdk21" >> $GITHUB_ENV
          fi

      - name: Build Spigot version
        run: |
          version=$(echo "${{ matrix.version }}" | awk -F: '{print $1}')
          ./build.sh "$version"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.date }}
          tag_name: ${{ env.date }}
          files: output/*.jar
          body_path: output/README.md

      - name: Save cache .m2 folder
        uses: actions/cache/save@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-cache-maven-${{ env.date }}

      - name: Save cache Spigot repos
        uses: actions/cache/save@v4
        with:
          path: |
            apache-maven-*
            Bukkit
            CraftBukkit
            Spigot
          key: ${{ runner.os }}-cache-spigot-${{ env.date }}

      - name: Save cache build works
        uses: actions/cache/save@v4
        with:
          path: work
          key: ${{ runner.os }}-cache-build-work-${{ env.date }}
