name: Spigot Build

on:
  schedule:
    - cron: "0 0 */4 * *"
  workflow_dispatch:
  push:

permissions:
  packages: write
  contents: write

jobs:
  get-versions:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.get_versions.outputs.versions }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch versions
        id: get_versions
        run: |
          versions_raw=$(curl -L -s https://hub.spigotmc.org/versions/ | grep -oP '(?<=href=")[^"]*' | grep -E '^[0-9]+\.[0-9]+(\.[0-9]+)?' | grep -v '-' | sed 's/.json//' | sort -V -r)

          builds=()
          versions=()

          for version in $versions_raw; do
              build=$(curl -L -s "https://hub.spigotmc.org/versions/${version}.json" | jq -r '.name')

              if [[ ! " ${builds[@]} " =~ " ${build} " ]]; then
                  builds+=("$build")
                  versions+=("$version")
              fi
          done

          json_versions=$(printf '%s\n' "${versions[@]}" | jq -R . | jq -s -c .)
          echo "versions=${versions[*]}" >> $GITHUB_ENV
          echo "versions=${json_versions}" >> $GITHUB_OUTPUT

      - name: Generate README.md
        run: |
          chmod +x README.sh
          ./README.sh

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Spigot
          tag_name: Spigot
          body_path: README.md

  build:
    runs-on: ubuntu-latest
    needs: get-versions
    strategy:
      matrix:
        version: ${{ fromJSON(needs.get-versions.outputs.versions) }}

    steps:
      - name: Set environment variable
        run: |
          java=$(curl -L -s "https://hub.spigotmc.org/versions/${{ matrix.version }}.json" | jq -r '.javaVersions[0]')
          if [ "$java" == "null" ]; then
            java=8
          else
            java=$((java - 44))
          fi

          echo "java=$java" >> $GITHUB_ENV

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java }}
          distribution: "temurin"

      - name: Set up BuildTool
        run: |
          wget https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar -O BuildTools.jar
          mkdir -p output

      - name: Build Spigot version
        run: |
          java -jar BuildTools.jar --rev "${{ matrix.version }}" --output-dir output

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Spigot
          tag_name: Spigot
          files: output/*.jar
